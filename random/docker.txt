About
=====
Your task is to make a working `Dockerfile` that will compile this code and make a container that will run the compiled jar. Then you'll ne
ed to deploy this container and set it up for public access.

Build
=====
- The following files/dirs need to be copied into the container
    - `BUILD`
    - `maven_install.json`
    - `WORKSPACE`
    - `sre/`
- Bazel needs to be installed in the container
- Run `bazel build //sre:app_deploy.jar` to build the deployment jar
  - The deployment jar will be at `bazel-bin/sre/app_deploy.jar` once built

Run
===
- Listens on port 8080
- There are 3 endpoints
  - `/hello`
  - `/install`
  - `/fail`

  ###


FROM ubuntu:18.04
# image naming / tagging
WORKDIR /usr
# which node / base image?
# build target directory
# WORKDIR ... problably /usr
run mkdir javapp
WORKDIR javapp
run mkdir sre
# copy files
COPY ./BUILD .
COPY maven_install.json .
COPY WORKSPACE .
COPY sre /usr/javapp/sre
# set up bazel
RUN apt update

RUN apt install -y curl gnupg && curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg \
    && mv bazel.gpg /etc/apt/trusted.gpg.d/ \
    && echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" |  tee /etc/apt/sources.list.d/bazel.list

RUN apt update &&  apt install -y bazel

# RUN apt update &&  apt full-upgrade

RUN apt install -y openjdk-11-jdk

RUN bazel --version
# run build
# do I need to modify path?
RUN bazel build //sre:app_deploy.jar
# execute output
# ENTRYPOINT
# EXPOSE (ports)